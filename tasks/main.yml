---
- include_role:
    name: andrewrothstein.unarchive-deps
- name: Create a directory if it does not exist
  become: true
  become_user: root
  file:
    path: '{{ spark_parent_dir }}'
    state: directory
    mode: u+rwx,g+rwx,o+rwx

- name: check for spark installation
  become: true
  become_user: '{{ spark_owner }}'
  stat:
    path: '{{ spark_target_dir }}'
  changed_when: false
  register: spark_binary

- when: not spark_binary.stat.exists
  block:
    - name: downloading spark from {{ spark_url }}
      become: true
      become_user: '{{ spark_owner }}'
      get_url:
        url: '{{ spark_url }}'
        dest: '{{ spark_tmp_tgz }}'
        mode: 0644
        checksum: '{{ spark_checksum }}'
        timeout: '{{ spark_timeout }}'
    - name: unarchive {{ spark_tmp_tgz }}
      become: true
      become_user: '{{ spark_owner }}'
      unarchive:
        remote_src: true
        dest: '{{ spark_parent_dir }}'
        src: '{{ spark_tmp_tgz }}'
        creates: '{{ spark_target_dir }}'
  always:
    - name: rm {{ spark_tmp_tgz }}
      become: true
      become_user: '{{ spark_owner }}'
      file:
        path: '{{ spark_tmp_tgz }}'
        state: absent
- name: linking {{ spark_link_dir }} to {{ spark_target_dir }}
  become: true
  become_user: '{{ spark_owner }}'
  file:
    src: '{{ spark_target_dir }}'
    dest: '{{ spark_link_dir }}'
    state: link

- set_fact:
    spark_profile: "{{ lookup('ansible.builtin.template', 'templates/spark.env.j2')}}"
    worker_hosts: "{{ groups|
                      dict2items|
                      selectattr('key', 'match', 'workers')|
                      map(attribute='value')|
                      list|
                      flatten }}"
- blockinfile:
    dest: '~/.profile'
    content: '{{ spark_profile }}'
    state: present

- when: spark_is_master
  block:
  - name: env/spark-env.sh
    become: true
    become_user: '{{spark_owner}}'
    ansible.builtin.copy:
      src: '{{ spark_target_dir }}/conf/spark-env.sh.template'
      dest: '{{ spark_target_dir }}/conf/spark-env.sh'
      owner: '{{ spark_owner }}'
      group: '{{ spark_group }}'
      mode: u+rwx,g+rwx,o+rw
      force: yes
      remote_src: true
  - name: env/workers
    become: true
    become_user: '{{spark_owner}}'
    ansible.builtin.copy:
      src: '{{ spark_target_dir }}/conf/workers.template'
      dest: '{{ spark_target_dir }}/conf/workers'
      owner: '{{ spark_owner }}'
      group: '{{ spark_group }}'
      mode: u+rw,g+rw,o+rw
      force: yes
      remote_src: true
  - lineinfile:
      dest: '{{ spark_target_dir }}/conf/workers'
      content: '{{ item }}'
      state: present
    with_items: '{{ worker_hosts }}'
